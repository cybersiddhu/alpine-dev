" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
" }
"
" Environment {
    " Setup Plugin Support {
        set rtp+=$NVIMDIR
        call plug#begin($MYPLUGINS)
    " }

" }

" Plugins {

    " Deps {
        if executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Plug 'mileszs/ack.vim'
        elseif executable('ack')
            Plug 'mileszs/ack.vim'
        elseif executable('ag')
            Plug 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        endif
    " }

    " General {
            Plug 'scrooloose/nerdtree'
            Plug 'Xuyuanp/nerdtree-git-plugin'
            Plug 'arcticicestudio/nord-vim', { 'tag': 'v0.15.0' }
            Plug 'tpope/vim-surround'
            Plug 'tpope/vim-repeat'
            Plug 'vim-scripts/sessionman.vim'
            Plug 'itchyny/lightline.vim'
            Plug 'bling/vim-bufferline'
            Plug 'jistr/vim-nerdtree-tabs'
            Plug 'mbbill/undotree'
            Plug 'myusuf3/numbers.vim'
            Plug 'nathanaelkane/vim-indent-guides'
            Plug 'ryanoasis/vim-devicons'
            Plug 'vim-scripts/restore_view.vim'
            Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
    " }

    " General Programming {
            Plug 'tpope/vim-fugitive', { 'tag': 'v3.0' }
            Plug 'mhinz/vim-signify'
            Plug 'mattn/webapi-vim'
            Plug 'mattn/gist-vim'
            Plug 'scrooloose/nerdcommenter'
            Plug 'tpope/vim-commentary'
    " }

    " Javascript syntax highlighting {
            Plug 'leafgarland/typescript-vim'
            Plug 'peitalin/vim-jsx-typescript'
            Plug 'jparise/vim-graphql'

    " }
    
    " Snippets, autocompletion and other coc extensions {
            Plug 'honza/vim-snippets'
            Plug 'neoclide/coc.nvim', {'branch': 'release'}
            Plug 'neoclide/coc-snippets', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-yank', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-pairs', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-css', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-eslint', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-json', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-html', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-prettier', {'do': 'yarn install --frozen-lockfile'}
            Plug 'fannheyward/coc-markdownlint', {'do': 'yarn install --frozen-lockfile'}
            Plug 'yuki-ycino/fzf-preview.vim', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-yaml', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-yank', {'do': 'yarn install --frozen-lockfile'}
            Plug 'neoclide/coc-tsserver', {'do': 'yarn install --frozen-lockfile'}
    " }
    
    " Rescript {
            Plug 'rescript-lang/vim-rescript', {'do': 'yarn'}
    " }

    " Misc {
            Plug 'godlygeek/tabular'
            Plug 'plasticboy/vim-markdown'
            Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install'  }
    " }


    call plug#end()

" }
